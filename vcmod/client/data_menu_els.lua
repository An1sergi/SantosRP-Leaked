
-----------------------------------------------------
function VC.CreateClSettingsTab_VC1_ELS(List, ListP)  local MPnl = VC.Add_El_Panel(ListP, {0.5,0.5}, 32, true)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText("") SNLbl:SetTall(8) MPnl[1]:AddItem(SNLbl)  local CBox = VC.Add_El_Checkbox("InteriorIndicators", "Tiny interior light bulbs.", "ELS_Dyn_Interior", VC.Settings) MPnl[1]:AddItem(CBox)  local Sldr = VC.Add_El_Slider("Multiplier", 0, 5, 2, VC.Lng("Will be multiplied by this amount."), "ELS_Dyn_Interior_M", VC.Settings) MPnl[2]:AddItem(Sldr)   local MPnl = VC.Add_El_Panel(ListP, {0.5,0.5}, 32, true)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText("") SNLbl:SetTall(8) MPnl[1]:AddItem(SNLbl)  local CBox = VC.Add_El_Checkbox(VC.Lng("DynamicLights"), VC.Lng("Cuts down on the lag. If dynamic lights should be drawn on the ELS lights."), "ELS_Dyn_Enabled", VC.Settings) MPnl[1]:AddItem(CBox)  local Sldr = VC.Add_El_Slider(VC.Lng("Multiplier"), 0, 5, 1, VC.Lng("Lights size (dynamic) will be multiplied by this amount."), "ELS_Dyn_Mult", VC.Settings) MPnl[2]:AddItem(Sldr)   local MPnl = VC.Add_El_Panel(ListP, {0.5,0.5}, 32, true)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText("") SNLbl:SetTall(8) MPnl[1]:AddItem(SNLbl)  local CBox = VC.Add_El_Checkbox(VC.Lng("ExtraGlow"), VC.Lng("Makes ELS lights even brighter by adding extra glow."), "ELS_ExtraGlow", VC.Settings) MPnl[1]:AddItem(CBox)  local Sldr = VC.Add_El_Slider(VC.Lng("Multiplier"), 0, 2, 1, VC.Lng("Lights size (dynamic) will be multiplied by this amount."), "ELS_ExtraGlow_M", VC.Settings) MPnl[2]:AddItem(Sldr) end  local function BuildMenu(Pnl)  local List = VC.Add_El_List(0, 35, Pnl:GetWide(), Pnl:GetTall()-60) List:SetParent(Pnl)   local ElTbl = {}   local Settings_Sv = {}   local MPnl_M = VC.Add_El_Panel(List, {0.5, 0.5}, 16, true)  local CBox = VC.Add_El_Checkbox("VCModMainEnabled", "Toggle the whole all VCMod addons to be enabled or disabled.", "Enabled", Settings_Sv, true) MPnl_M[1]:AddItem(CBox) ElTbl.Enabled = CBox  local CBox = VC.Add_El_Checkbox("VCModELSEnabled", "Basically shuts down all the stuff bellow.", "Enabled_ELS", Settings_Sv, true) MPnl_M[2]:AddItem(CBox) ElTbl.Enabled_ELS = CBox   local Sheet = vgui.Create("DPropertySheet") Sheet:SetTall(435)  local List_1_1 = VC.Add_El_List(0, 6, 450, 435) Sheet:AddSheet(VC.Lng("Lights"), List_1_1, "icon16/lightbulb.png", false, false, "Light options.")  local List_1_2 = VC.Add_El_List(0, 6, 450, 435) Sheet:AddSheet(VC.Lng("Sound"), List_1_2, "icon16/sound.png", false, false, "Sound options.")  local List_1_4 = VC.Add_El_List(0, 6, 450, 435) Sheet:AddSheet(VC.Lng("PoliceChatter"), List_1_4, "icon16/sound_low.png", false, false, "Real-time police chatter.")  local List_1_3 = VC.Add_El_List(0, 6, 450, 800) Sheet:AddSheet(VC.Lng("Other"), List_1_3, "icon16/anchor.png", false, false, "Other options.")  List:AddItem(Sheet)   local CBox = VC.Add_El_Checkbox("ELSLightsEnabled", "Toggle the all ELS lights on/off.", "ELS_Lights", Settings_Sv, true) List_1_1:AddItem(CBox) ElTbl.ELS_Lights = CBox   local MPnl = VC.Add_El_Panel(List_1_1, {0.5,0.5}, 32, 2)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText("") SNLbl:SetTall(8) MPnl[1]:AddItem(SNLbl)  local CBox = VC.Add_El_Checkbox("AutoDisableELSLights", "After this the specified amount of time the lights automatically turn off when car is left alone.", "ELS_Lht_Off", Settings_Sv, true) MPnl[1]:AddItem(CBox) ElTbl.ELS_Lht_Off = CBox  local Sldr = VC.Add_El_Slider("OffTime", 0, 600, 1, "After leaving the car in this amount of seconds the lights will be off.", "ELS_Lht_OffIn", Settings_Sv, true) MPnl[2]:AddItem(Sldr) ElTbl.ELS_Lht_OffIn = Sldr   local MPnl = VC.Add_El_Panel(List_1_2, {0.25,0.75}, 32, 2)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText("") SNLbl:SetTall(8) MPnl[1]:AddItem(SNLbl)  local CBox = VC.Add_El_Checkbox("Horn", "This will allow people to use cars horn.", "Horn_Enabled", Settings_Sv, true) MPnl[1]:AddItem(CBox) ElTbl.Horn_Enabled = CBox  local Sldr = VC.Add_El_Slider("Volume", 0, 1, 1, "How loud the horn will be.", "Horn_Volume", Settings_Sv, true) MPnl[2]:AddItem(Sldr) ElTbl.Horn_Volume = Sldr   local MPnl = VC.Add_El_Panel(List_1_2, {0.25,0.75}, 32, 2)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText("") SNLbl:SetTall(8) MPnl[1]:AddItem(SNLbl)  local CBox = VC.Add_El_Checkbox("Siren", "Should the ELS emit siren?", "ELS_Sounds", Settings_Sv, true) MPnl[1]:AddItem(CBox) ElTbl.ELS_Sounds = CBox  local Sldr = VC.Add_El_Slider("Volume", 0, 1, 1, "How loud the sirens sound will be.", "ELS_Volume", Settings_Sv, true) MPnl[2]:AddItem(Sldr) ElTbl.ELS_Volume = Sldr   local MPnl = VC.Add_El_Panel(List_1_2, {0.35,0.65}, 32, 2)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText("") SNLbl:SetTall(8) MPnl[1]:AddItem(SNLbl)  local CBox = VC.Add_El_Checkbox("AutoDisableELSSounds", "After this the specified amount of time the sounds automatically turn off when car is left alone.", "ELS_Off", Settings_Sv, true) MPnl[1]:AddItem(CBox) ElTbl.ELS_Off = CBox  local Sldr = VC.Add_El_Slider("OffTime", 0, 600, 1, "After leaving the car in this amount of seconds the sounds will be off.", "ELS_OffIn", Settings_Sv, true) MPnl[2]:AddItem(Sldr) ElTbl.ELS_OffIn = Sldr    local CBox = VC.Add_El_Checkbox("Manual", "Allows to use the manual siren mode.", "ELS_Manual", Settings_Sv, true) List_1_2:AddItem(CBox) ElTbl.ELS_Manual = CBox  local CBox = VC.Add_El_Checkbox("Bullhorn", "Changes the horn if the siren is on.", "ELS_BullHorn", Settings_Sv, true) List_1_2:AddItem(CBox) ElTbl.ELS_BullHorn = CBox   local MPnl = VC.Add_El_Panel(List_1_3, {0.6,0.4}, 32, 2)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText("") SNLbl:SetTall(8) MPnl[1]:AddItem(SNLbl)  local CBox = VC.Add_El_Checkbox("ReduceDamageToEmergencyVehicles", "This only works with the VCMod Main addon.\n\nCars equipped with sirens (meaning taxi's are out) damage will be reduced by the multiplied.", "ELS_Vehicle_RedDamage", Settings_Sv, true) MPnl[1]:AddItem(CBox) ElTbl.ELS_Vehicle_RedDamage = CBox  local Sldr = VC.Add_El_Slider("Multiplier", 0, 5, 2, "Will be multiplied by this amount.", "ELS_Vehicle_RedDamage_M", Settings_Sv, true) MPnl[2]:AddItem(Sldr) ElTbl.ELS_Vehicle_RedDamage_M = Sldr   local SNLbl = vgui.Create("DLabel") SNLbl:SetText("Police chatter is a real time feed of official police chatter via radio.") List_1_4:AddItem(SNLbl)  local MPnl = VC.Add_El_Panel(List_1_4, {0.5, 0.5}, 32, true)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText("") SNLbl:SetTall(8) MPnl[1]:AddItem(SNLbl)  local CBox = VC.Add_El_Checkbox("PoliceChatterEnabled", "The very transparent glow around the lights.", "ELS_Chatter", Settings_Sv, true) MPnl[1]:AddItem(CBox) ElTbl.ELS_Chatter = CBox  local Sldr = VC.Add_El_Slider("Volume", 0, 1, 2, "The volume of the chatter.", "ELS_Chatter_Volume", Settings_Sv, true) MPnl[2]:AddItem(Sldr) ElTbl.ELS_Chatter_Volume = Sldr   local MPnl = VC.Add_El_Panel(List_1_4, {1}, 200)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText('This section is still WIP.') MPnl[1]:AddItem(SNLbl)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText('If you want to add your own custom stations go to "garrysmod/data/vcmod/els_chatter.txt".') MPnl[1]:AddItem(SNLbl)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText('If you want to reset the station list to the default values, simply remove that file and restart.') MPnl[1]:AddItem(SNLbl)  local Sldr = VC.Add_El_Slider("SelectedRadioChatter", 0, 15, 0, "The selected radio chatter.", "ELS_Chatter_Sel", Settings_Sv, true) MPnl[1]:AddItem(Sldr) ElTbl.ELS_Chatter_Sel = Sldr  local SNLbl = vgui.Create("DLabel") SNLbl:SetText('Default police chatter list:') MPnl[1]:AddItem(SNLbl)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText('1 - "Indianapolis Metro Police Dispatch"') MPnl[1]:AddItem(SNLbl)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText('2 - "Lincoln Nebraska EDACS"') MPnl[1]:AddItem(SNLbl)  local SNLbl = vgui.Create("DLabel") SNLbl:SetText('3 - "Coral Springs Florida Police and Fire Dispatch"') MPnl[1]:AddItem(SNLbl)   local Btn = vgui.Create("VC_Button") Btn:SetColor(VC.Color.Btn_Add) Btn:SetSize(75, 20) Btn:SetPos(Pnl:GetWide()/2-112.25, Pnl:GetTall()-20) Btn:SetText(VC.Lng("Save")) Btn:SetParent(Pnl) Btn:SetToolTip("Save the settings.")  Btn.DoClick = function() if VC.CanEditAdminSettings(LocalPlayer()) then net.Start("VC_SendSettingsToServer") net.WriteTable(Settings_Sv) net.SendToServer() VCPopup("SettingsSaved", "check") end end   local Btn = vgui.Create("VC_Button") Btn:SetColor(VC.Color.Btn_Orn) Btn:SetSize(75, 20) Btn:SetPos(Pnl:GetWide()/2-37.25, Pnl:GetTall()-20) Btn:SetText(VC.Lng("Reset")) Btn:SetParent(Pnl) Btn:SetToolTip("Reset all settings to their default values.")  Btn.DoClick = function() if VC.CanEditAdminSettings(LocalPlayer()) then RunConsoleCommand("VC_ResetSettings") if VC.Menu_Panel then VC.Menu_Panel.VC_Refresh_Panel = true end VCPopup("SettingsReset", "check") end end   local Btn = vgui.Create("VC_Button") Btn:SetColor(VC.Color.Btn_Spw) Btn:SetPos(Pnl:GetWide()/2+37.25, Pnl:GetTall()-20) Btn:SetSize(75, 20) Btn:SetText(VC.Lng("Load")) Btn:SetParent(Pnl) Btn:SetToolTip("Load settings from the server.")  Btn.DoClick = function() if VC.CanEditAdminSettings(LocalPlayer()) then RunConsoleCommand("VC_GetSettings_Sv") VCPopup("LoadedSettingsFromServer", "check") end end   if VC.CanEditAdminSettings(LocalPlayer()) then RunConsoleCommand("VC_GetSettings_Sv") end   local X, Y = List:GetPos() local Sx, Sy = List:GetSize()  Pnl.Paint = function(obj, Sx, Sy)  draw.RoundedBox(0, X, Y, Sx, Sy, Color(0, 0, 0, 100))  draw.DrawText(VC.Lng("OptOnly_Admin"), "VC_Dev_Text", List:GetWide()/2, 5, VC.Color.Neutral, TEXT_ALIGN_CENTER)  end   Pnl.Think = function() if VC.Settings_TempTbl then for k,v in pairs(VC.Settings_TempTbl) do if ElTbl[k] then ElTbl[k]:SetValue(v) end Settings_Sv[k] = v end VC.Settings_TempTbl = nil end end   return Draw end VC.Menu_Items_A.ELSOptions = {"ELSOptions", BuildMenu} local rs7 = "vc.check_msg_work_ALS_k4" 