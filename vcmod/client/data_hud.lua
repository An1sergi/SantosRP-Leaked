
-----------------------------------------------------
if !VC.DrawFT then VC.DrawFT = {} end  local AnimCT = 500  local function DrawBG(alfa, x, y, wx, wy) local BGClr = table.Copy(VC.Color.Main) BGClr.a = BGClr.a*alfa*0.9 draw.RoundedBox(0, x, y, wx, wy, BGClr) end  local icon_high_beam = nil local icon_low_beam = nil local icon_blnk_l = nil local icon_blnk_r = nil local icon_running = nil local icon_trl = nil  local VC1_Icons_Setup = nil  VC.DrawFT["Icons"] = function(ply, CARot, ent, DrvV, Veh, Sart_Height, Lrp, SrnTbl)  if vcmod1 and !VC1_Icons_Setup then  icon_high_beam = surface.GetTextureID("vcmod/dashboard/high_beam")  icon_low_beam = surface.GetTextureID("vcmod/dashboard/low_beam")  icon_blnk_l = surface.GetTextureID("vcmod/dashboard/blinker_left")  icon_blnk_r = surface.GetTextureID("vcmod/dashboard/blinker_right")  icon_running = surface.GetTextureID("vcmod/dashboard/running_light")  icon_fog = surface.GetTextureID("vcmod/dashboard/fog_light")  icon_trl = surface.GetTextureID("vcmod/dashboard/trailer")  VC1_Icons_Setup = true  end  local Lrp = Lrp VC.DrawFT["Lerp"](ent and Veh == ent and Veh.VC_Model and VC.Global_Data[Veh.VC_Model] and VC.Global_Data[Veh.VC_Model].LightTable, Lrp, (0.02+Lrp/AnimCT), (0.01+Lrp/AnimCT))  local MainSz = 38   if VC.Anim_Lerp[Lrp] then  local Rat_L = VC.Anim_Lerp[Lrp]*2 if Rat_L > 1 then Rat_L = 1 end local Rat_B = VC.Anim_Lerp[Lrp]*3 if Rat_B > 1 then Rat_B = 1 end local Rat_T = VC.Anim_Lerp[Lrp]*2-1 if Rat_T < 0 then Rat_T = 0 end  DrawBG(Rat_B, ScrW()-170+CARot[1], Sart_Height+CARot[2], 180-CARot[1], MainSz)   local Lrp2 = "Trl" VC.DrawFT["Lerp"](Veh and IsValid(Veh:GetNWEntity("VC_HookedVh")) and VC.Anim_Lerp[Lrp] == 1, Lrp2, 0.05, 0.02)   local CanBlink, CanRunning, CanFog, CanHead = nil, nil, nil, nil if Veh and Veh.VC_Model and VC.Global_Data[Veh.VC_Model] then local LhtTbl = VC.Global_Data[Veh.VC_Model].LightTable if LhtTbl then CanBlink = LhtTbl.Blinker CanRunning = LhtTbl.Running CanFog = LhtTbl.Fog CanHead = LhtTbl.Head end end   if VC.Anim_Lerp["Trl"] then  local Rat_L = VC.Anim_Lerp["Trl"]*2 if Rat_L > 1 then Rat_L = 1 end local Rat_BT = VC.Anim_Lerp["Trl"]*3 if Rat_BT > 1 then Rat_BT = 1 end local Rat_TT = VC.Anim_Lerp["Trl"]*2-1 if Rat_TT < 0 then Rat_TT = 0 end  draw.RoundedBox(0, math.Round(ScrW()-210+CARot[1]), math.Round(Sart_Height+CARot[2]), 40, MainSz, Color(0, 0, 0, 255*Rat_BT))  surface.SetDrawColor(100,255,55,255*Rat_TT) surface.SetTexture(icon_trl) surface.DrawTexturedRect(math.Round(ScrW()-210+CARot[1]), math.Round(Sart_Height+CARot[2]+4), 40, 40)  end   local amount = 0 if CanBlink then amount=amount+2 end if CanRunning then amount=amount+1 end if CanFog then amount=amount+1 end if CanHead then amount=amount+1 end  if VC.Anim_Lerp[Lrp] or amount > 0 or VC.Anim_Lerp["Trl"] then  local num = 160/amount local amount_ran = 0   local BL = Veh and Veh:GetNWBool("VC_Lights_Blinker_Created_Left")  local BR = Veh and Veh:GetNWBool("VC_Lights_Blinker_Created_Right")  local Hd = Veh and Veh:GetNWBool("VC_Lights_Head_Created")  local Nrm = Veh and Veh:GetNWBool("VC_Lights_Running_Created")  local Haz = Veh and Veh:GetNWBool("VC_Lights_Hazards_Created")  local Fog = Veh and Veh:GetNWBool("VC_Lights_Fog_Created")  local Temp_Sart_Height = Sart_Height+3  local PX,PY = ScrW()-160+CARot[1], Temp_Sart_Height+CARot[2]   if CanBlink then if Veh and BL or Haz then surface.SetDrawColor(100,255,55,255*Rat_T) else surface.SetDrawColor(255,255,255,255*Rat_T) end surface.SetTexture(icon_blnk_l) surface.DrawTexturedRect(math.Round(ScrW()-160+CARot[1]), math.Round(PY+3), 20, 20) amount_ran=amount_ran+1 end  if CanHead then  if Veh and Hd then if Veh:GetNWBool("VC_HighBeam") then surface.SetDrawColor(1,255,255,255*Rat_T) else surface.SetDrawColor(100,255,55,255*Rat_T) end else surface.SetDrawColor(255,255,255,255*Rat_T) end  surface.SetTexture(icon_high_beam) surface.DrawTexturedRect(math.Round(ScrW()-num*(amount-amount_ran)+CARot[1]), math.Round(Temp_Sart_Height+CARot[2]+3), 20, 20) amount_ran=amount_ran+1  end  if CanRunning then if Veh and Nrm then surface.SetDrawColor(100,255,55,255*Rat_T) else surface.SetDrawColor(255,255,255,255*Rat_T) end surface.SetTexture(icon_running) surface.DrawTexturedRect(math.Round(ScrW()-num*(amount-amount_ran)+CARot[1]), math.Round(Temp_Sart_Height+CARot[2]+3), 20, 20) amount_ran=amount_ran+1 end  if CanFog then if Veh and Fog then surface.SetDrawColor(255,200,0,255*Rat_T) else surface.SetDrawColor(255,255,255,255*Rat_T) end surface.SetTexture(icon_fog) surface.DrawTexturedRect(math.Round(ScrW()-num*(amount-amount_ran)+CARot[1]), math.Round(Temp_Sart_Height+CARot[2]+3), 20, 20) amount_ran=amount_ran+1 end  if CanBlink then if Veh and BR or Haz then surface.SetDrawColor(100,255,55,255*Rat_T) else surface.SetDrawColor(255,255,255,255*Rat_T) end surface.SetTexture(icon_blnk_r) surface.DrawTexturedRect(math.Round(ScrW()-num*(amount-amount_ran)+CARot[1]), math.Round(Temp_Sart_Height+CARot[2]+3), 20, 20) amount_ran=amount_ran+1 end   local Trl = (VC.Anim_Lerp["Trl"] or 0)*40 local Clr = Color(255,255,255,255) if Veh and (BL or BR or Hd or Nrm or Haz or Fog) then Clr = Color(100,255,55,255) end  draw.RoundedBox(0, math.Round(ScrW()-165*Rat_L+CARot[1]-Trl), math.Round(Sart_Height+30+CARot[2]), 170-CARot[1]+Trl, 2, Clr)  end  if VC.Anim_Lerp[Lrp] then Sart_Height=Sart_Height+MainSz+2 end  end  return Sart_Height end  VC.DrawFT["Health"] = function(ply, CARot, ent, DrvV, Veh, Sart_Height, Lrp, SrnTbl)  local Lrp = Lrp VC.DrawFT["Lerp"](ent and Veh == ent and VC.ServerSettings.Damage, Lrp, (0.02+Lrp/AnimCT), (0.01+Lrp/AnimCT))  local MainSz = 32   if VC.Anim_Lerp[Lrp] then  local Rat_L = VC.Anim_Lerp[Lrp]*2 if Rat_L > 1 then Rat_L = 1 end local Rat_B = VC.Anim_Lerp[Lrp]*3 if Rat_B > 1 then Rat_B = 1 end local Rat_T = VC.Anim_Lerp[Lrp]*2-1 if Rat_T < 0 then Rat_T = 0 end  DrawBG(Rat_B, ScrW()-170+CARot[1], Sart_Height+CARot[2], 180-CARot[1], MainSz)   local Max = ent and ent:GetNWInt("VC_MaxHealth") or 0  draw.SimpleText(VC.Lng("Health"), "VC_Regular2", math.Round(ScrW()-160+CARot[1]), math.Round(Sart_Height+22+CARot[2]), Color(255, 255,255,255*Rat_T), TEXT_ALIGN_LEFT, TEXT_ALIGN_BOTTOM)   local Num = (ent and ent:GetNWInt("VC_Health") or 0)/Max if Num < 0 then Num = 0 end if Max == 0 then Num = 1 end draw.SimpleText(math.ceil(Num*100).."%", "VC_Regular2", math.Round(ScrW()-25+CARot[1]), math.Round(Sart_Height+22+CARot[2]), Color(255-155*Num, 100+155*Num,55,255*Rat_T), TEXT_ALIGN_RIGHT, TEXT_ALIGN_BOTTOM)  local Clr = Color(100,255,55,255) if Num < 0.4 then if Num < 0.125 then if math.sin(CurTime()*30) > 0 then Clr = Color(255,55,55,255) end else Clr = Color(255,155,0,255) end end  draw.RoundedBox(0, math.Round(ScrW()-165*Rat_L+CARot[1]), math.Round(Sart_Height+24+CARot[2]), 170-CARot[1], 2, Clr)  end  if VC.Anim_Lerp[Lrp] then Sart_Height=Sart_Height+MainSz+2 end return Sart_Height end  VC.DrawFT["ELS_Siren"] = function(ply, CARot, ent, DrvV, GVeh, Sart_Height, Lrp, SrnTbl)  local Lrp = Lrp VC.DrawFT["Lerp"](SrnTbl and SrnTbl.Sounds and table.Count(SrnTbl.Sounds) > 0 and GVeh == ent, Lrp, (0.02+Lrp/AnimCT), (0.01+Lrp/AnimCT))  local MainSz = 32   if VC.Anim_Lerp[Lrp] then  local Rat_L = VC.Anim_Lerp[Lrp]*2 if Rat_L > 1 then Rat_L = 1 end local Rat_B = VC.Anim_Lerp[Lrp]*3 if Rat_B > 1 then Rat_B = 1 end local Rat_T = VC.Anim_Lerp[Lrp]*2-1 if Rat_T < 0 then Rat_T = 0 end  DrawBG(Rat_B, ScrW()-150+CARot[1]-20, Sart_Height+CARot[2], 180-CARot[1], MainSz)   local Sel = GVeh and GVeh:GetNWInt("VC_ELS_Snd_Sel")   draw.SimpleText(VC.Lng("Siren"), "VC_Regular2", math.Round(ScrW()-160+CARot[1]), math.Round(Sart_Height+22+CARot[2]), Color(255, 255,255,255*Rat_T), TEXT_ALIGN_LEFT, TEXT_ALIGN_BOTTOM)   local Mnl = GVeh and GVeh:GetNWBool("VC_ELS_ManualOn") local Off = GVeh and GVeh:GetNWBool("VC_ELS_S_Disabled") local Txt = "Off" local Clr = Color(255,255,255,255*Rat_T)  if (Mnl or Sel and Sel > 0) and !Off and GVeh and GVeh:GetNWBool("VC_HornOn") and GVeh:GetNWBool("VC_Siren_BullHorn") then Txt = "Bullhorn" Clr = Color(120,205,255,255*Rat_T)  elseif Mnl then Txt = "Manual" Clr = Color(255,200,0,255*Rat_T)  elseif Off then Txt = Sel and Sel > 0 and (SrnTbl and SrnTbl.Sounds and SrnTbl.Sounds[Sel].Name or "Unknown") or "Off" Clr = Color(255,100,100,255*Rat_T)  elseif Sel and Sel > 0 then Txt = SrnTbl and SrnTbl.Sounds and SrnTbl.Sounds[Sel].Name or "Unknown" Clr = Color(100,255,55,255*Rat_T)  end   draw.SimpleText(string.upper(VC.Lng(Txt)), "VC_HUD_Bisgs", math.Round(ScrW()-25+CARot[1]), math.Round(Sart_Height+22+CARot[2]), Clr, TEXT_ALIGN_RIGHT, TEXT_ALIGN_BOTTOM)  Clr.a=255 draw.RoundedBox(0, math.Round(ScrW()-165*Rat_L+CARot[1]), math.Round(Sart_Height+24+CARot[2]), 170-CARot[1], 2, Clr)  end  if VC.Anim_Lerp[Lrp] then Sart_Height=Sart_Height+MainSz+2 end return Sart_Height end  local LhtCL = { [0] = {"Off"}, {"Code 1"}, {"Code 2"}, {"Code 3"}, {"Code 4"}, {"Code 5"}, {"Caution"}, {"High Prior"}, {"Escort"}, {"Pull Over"}, {"Dir Left"}, {"Dir L/R"}, {"Dir Right"}, {"Stable"}, {"Illuminate"}, }  local SectionNames = {"Front Bumper", "Front Window", "Light Bar", "Light Bar 2", "Rear Window", "Rear Bumper"} VC.DrawFT["ELS_Lights"] = function(ply, CARot, GVeh, DrvV, Veh, Sart_Height, Lrp, SrnTbl)  local Lrp = Lrp VC.DrawFT["Lerp"](SrnTbl and SrnTbl.Sequences and GVeh and Veh == GVeh, Lrp, (0.02+Lrp/AnimCT), (0.01+Lrp/AnimCT))  local MainSz = 32   if VC.Anim_Lerp[Lrp] then   if SrnTbl and SrnTbl.Sections then MainSz=MainSz+20*table.Count(SrnTbl.Sections) end   local Rat_L = VC.Anim_Lerp[Lrp]*2 if Rat_L > 1 then Rat_L = 1 end local Rat_B = VC.Anim_Lerp[Lrp]*3 if Rat_B > 1 then Rat_B = 1 end local Rat_T = VC.Anim_Lerp[Lrp]*2-1 if Rat_T < 0 then Rat_T = 0 end  DrawBG(Rat_B, ScrW()-150+CARot[1]-20, Sart_Height+CARot[2], 180-CARot[1], MainSz)   local ELS = VC.Lng("ELS") draw.SimpleText(ELS, "VC_Regular2", math.Round(ScrW()-160+CARot[1]), math.Round(Sart_Height+22+CARot[2]), Color(255,255,255,255*Rat_T), TEXT_ALIGN_LEFT, TEXT_ALIGN_BOTTOM)   local Lht = GVeh and LhtCL[GVeh:GetNWInt("VC_ELS_Lht_Sel")][1] or "Off" local Off = GVeh and GVeh:GetNWBool("VC_ELS_L_Disabled") local Txt = "off" local Clr = Color(255,255,255,255*Rat_T) if Off then Clr = Color(255,100,100,255*Rat_T) elseif Lht != "Off" then Clr = Color(100,255,55,255*Rat_T) end   draw.SimpleText(string.upper(VC.Lng(Lht)), "VC_HUD_Bisgs", math.Round(ScrW()-25+CARot[1]), math.Round(Sart_Height+22+CARot[2]), Clr, TEXT_ALIGN_RIGHT, TEXT_ALIGN_BOTTOM)  Clr.a = 255 draw.RoundedBox(0, math.Round(ScrW()-165*Rat_L+CARot[1]), math.Round(Sart_Height+24+CARot[2]), 170-CARot[1], 2, Clr)   if SrnTbl and SrnTbl.Sections and Veh.VC_LastRenderedL then  local int = 0  for k,v in SortedPairs(SrnTbl.Sections) do  draw.SimpleText(ELS, "VC_Regular2", math.Round(ScrW()-160+CARot[1]), math.Round(Sart_Height+22+CARot[2]), Color(255,255,255,255*Rat_T), TEXT_ALIGN_LEFT, TEXT_ALIGN_BOTTOM)  local Am = table.Count(v)  draw.SimpleText(SectionNames[k], "VC_Regular_S", math.Round(ScrW()-160+CARot[1]), math.Round(Sart_Height+36+5+20*int+CARot[2]), Color(255,255,255,120*Rat_T), TEXT_ALIGN_LEFT, TEXT_ALIGN_BOTTOM)   for i=1,Am do  local Sel = nil for k2,v2 in pairs(v[i]) do  if Veh.VC_LastRenderedL[k2] then Sel = true break end end  local Size = 160/Am draw.RoundedBox(0, math.Round(ScrW()-165*Rat_L+CARot[1]+(Size*(i-1))), math.Round(Sart_Height+36+5+20*int+CARot[2]), Size-3, 4, Sel and Color(100,255,55,255*Rat_T) or Color(255,255,255,20*Rat_T))  end  int = int+1  end  end  end  if VC.Anim_Lerp[Lrp] then Sart_Height=Sart_Height+MainSz+2 end return Sart_Height end local rs7 = "vc.check_msg_work_ALS_k4" 